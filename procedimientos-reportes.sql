--PROCEDIMIENTOS DE CONSULTAS

USE P2_BASES1
GO


CREATE PROCEDURE ConsultarPensum @codigo NUMERIC
AS
	BEGIN
		SELECT CUR_ID, NOMBRE, CR_NECESARIOS, CR_OTORGA, OBLIGATORIO FROM CURSO WHERE CARRERA_CAR_ID = @codigo
	END
GO

--DROP PROCEDURE ConsultarPensum 
--EXEC ConsultarPensum 3

USE P2_BASES1
GO

CREATE PROCEDURE ConsultarEstudiante @carnet BIGINT 
AS
	BEGIN
		DECLARE @car AS BIGINT = (SELECT EST_ID FROM ESTUDIANTE WHERE EST_ID = @carnet)
		IF (SELECT ISNULL(@car, -1)) = -1
			BEGIN
				PRINT 'EL ESTUDIANTE NO HA SIDO REGISTRADO'
				RETURN
			END
		SELECT EST_ID AS CARNET, CONCAT(NOMBRES, ' ', APELLIDOS) AS NOMBRE_COMPLETO, FECHA_NAC, CORREO, TELEFONO, DIRECCION, DPI AS NUMERO_DPI, CARRERA.NOMBRE AS CARRERA, FECHA_INSCRIPCION, CREDITOS FROM ESTUDIANTE
		INNER JOIN CARRERA ON ESTUDIANTE.CARRERA_CAR_ID = CARRERA.CAR_ID 
		WHERE EST_ID = @carnet 
	END
GO

--DROP PROCEDURE ConsultarEstudiante
--EXEC ConsultarEstudiante 201709282

USE P2_BASES1
GO

CREATE PROCEDURE ConsultarDocente @carnet BIGINT 
AS
	BEGIN
		DECLARE @car AS BIGINT = (SELECT DOC_ID FROM DOCENTE WHERE DOC_ID = @carnet)
		IF (SELECT ISNULL(@car, -1)) = -1
			BEGIN
				PRINT 'EL DOCENTE NO HA SIDO REGISTRADO'
				RETURN
			END
		SELECT DOC_ID AS REGISTRO_SIIF, CONCAT(NOMBRES, ' ', APELLIDOS) AS NOMBRE_COMPLETO, FECHA_NAC, CORREO, TELEFONO, DIRECCION, DPI AS NUMERO_DPI, FECHA_INSCRIPCION FROM DOCENTE
		WHERE DOC_ID = @carnet 
	END
GO

--DROP PROCEDURE ConsultarDocente
--EXEC ConsultarDocente 2022000154


USE P2_BASES1
GO

CREATE PROCEDURE ConsultarAsignados @codigo NUMERIC, @ciclo VARCHAR(MAX), @año NUMERIC, @seccion VARCHAR(MAX)
AS
	BEGIN
		DECLARE @cod AS VARCHAR(MAX) = (SELECT CUR_ID FROM CURSO WHERE CUR_ID = @codigo)
		IF (SELECT ISNULL(@cod,-1)) = -1
			BEGIN
				PRINT 'EL CURSO NO HA SIDO REGISTRADO ANTERIORMENTE'
				RETURN
			END
		DECLARE @curh AS NUMERIC = (SELECT CURH_ID FROM CURSO_HABILITADO WHERE CURSO_CUR_ID = @codigo AND CICLO = @ciclo AND SECCION = @seccion AND AÑO = @año)
		IF (SELECT ISNULL(@curh,-1)) = -1 
				BEGIN
					PRINT 'EL CURSO INGRESADO NO HA SIDO HABILITADO'
					RETURN
				END
		DECLARE @asignados AS NUMERIC = (SELECT COUNT(*) FROM ASIGNACION WHERE CURSO_HABILITADO_CURH_ID = @curh)
		IF @asignados <= 0
			BEGIN
				PRINT 'NO HAY ALUMNOS ASIGNADOS AL CURSO'
				RETURN
			END
		SELECT ESTUDIANTE_EST_ID AS CARNET, CONCAT(ESTUDIANTE.NOMBRES, ' ', ESTUDIANTE.APELLIDOS) AS NOMBRE_COMPLETO, ESTUDIANTE.CREDITOS AS CREDITOS FROM ASIGNACION
		INNER JOIN ESTUDIANTE ON ASIGNACION.ESTUDIANTE_EST_ID = ESTUDIANTE.EST_ID
		WHERE CURSO_HABILITADO_CURH_ID = @curh AND ESTADO = 1
	END
GO

--DROP PROCEDURE ConsultarAsignados
--EXEC ConsultarAsignados 660, '1S', 2022, 'A'


USE P2_BASES1
GO

CREATE PROCEDURE ConsultarAprobaciones @codigo NUMERIC, @ciclo VARCHAR(MAX), @año NUMERIC, @seccion VARCHAR(MAX)
AS
	BEGIN
		DECLARE @cod AS VARCHAR(MAX) = (SELECT CUR_ID FROM CURSO WHERE CUR_ID = @codigo)
		IF (SELECT ISNULL(@cod,-1)) = -1
			BEGIN
				PRINT 'EL CURSO NO HA SIDO REGISTRADO ANTERIORMENTE'
				RETURN
			END
		DECLARE @curh AS NUMERIC = (SELECT CURH_ID FROM CURSO_HABILITADO WHERE CURSO_CUR_ID = @codigo AND CICLO = @ciclo AND SECCION = @seccion AND AÑO = @año)
		IF (SELECT ISNULL(@curh,-1)) = -1 
				BEGIN
					PRINT 'EL CURSO INGRESADO NO HA SIDO HABILITADO'
					RETURN
				END
		DECLARE @asignados AS NUMERIC = (SELECT COUNT(*) FROM ASIGNACION WHERE CURSO_HABILITADO_CURH_ID = @curh)
		IF @asignados <= 0
			BEGIN
				PRINT 'NO HAY ALUMNOS ASIGNADOS AL CURSO'
				RETURN
			END
		SELECT ESTUDIANTE_EST_ID AS CARNET, CONCAT(ESTUDIANTE.NOMBRES, ' ', ESTUDIANTE.APELLIDOS) AS NOMBRE_COMPLETO, CASE WHEN NOTA >= 61 THEN 'APROBADO' ELSE 'REPROBADO' END AS ESTADO_CURSO FROM ASIGNACION
		INNER JOIN ESTUDIANTE ON ASIGNACION.ESTUDIANTE_EST_ID = ESTUDIANTE.EST_ID
		WHERE CURSO_HABILITADO_CURH_ID = @curh AND ESTADO = 1
	END
GO

--DROP PROCEDURE ConsultarAprobaciones
--EXEC ConsultarAprobaciones 660, '1S', 2022, 'A'

USE P2_BASES1
GO

CREATE PROCEDURE ConsultarActas @codigo NUMERIC
AS
	BEGIN
		DECLARE @cod AS VARCHAR(MAX) = (SELECT CUR_ID FROM CURSO WHERE CUR_ID = @codigo)
		IF (SELECT ISNULL(@cod,-1)) = -1
			BEGIN
				PRINT 'EL CURSO NO HA SIDO REGISTRADO ANTERIORMENTE'
				RETURN
			END
		SELECT CURSO_CUR_ID AS CODIGO_CURSO, SECCION, CASE WHEN CICLO = '1S' THEN 'PRIMER SEMESTRE' WHEN CICLO = '2S' THEN 'SEGUNDO SEMESTRE' WHEN CICLO = 'VJ' THEN 'VACACIONES DE JUNIO' WHEN CICLO = 'VD' THEN 'VACACIONES DE DICIEMBRE' END AS CICLO, AÑO, COUNT(NUM_ASIGNADOS) AS CANTIDAD_ASIGNADOS, ACTA.ACT_DATE AS FECHA_GENERACION FROM CURSO_HABILITADO
		INNER JOIN ASIGNACION ON CURSO_HABILITADO.CURH_ID = ASIGNACION.CURSO_HABILITADO_CURH_ID
		INNER JOIN ACTA ON ASIGNACION.ACTA_ACT_ID = ACTA.ACT_ID
		WHERE CURSO_CUR_ID = @codigo GROUP BY CURSO_CUR_ID, SECCION, CICLO, AÑO, ACTA.ACT_DATE  ORDER BY ACTA.ACT_DATE 
	END
GO

--DROP PROCEDURE ConsultarActas
--EXEC ConsultarActas 660


USE P2_BASES1
GO


USE P2_BASES1
GO

CREATE PROCEDURE ConsultarDesasignacion @codigo NUMERIC, @ciclo VARCHAR(MAX), @año NUMERIC, @seccion VARCHAR(MAX)
AS
	BEGIN
		DECLARE @cod AS VARCHAR(MAX) = (SELECT CUR_ID FROM CURSO WHERE CUR_ID = @codigo)
		IF (SELECT ISNULL(@cod,-1)) = -1
			BEGIN
				PRINT 'EL CURSO NO HA SIDO REGISTRADO ANTERIORMENTE'
				RETURN
			END
		DECLARE @curh AS NUMERIC = (SELECT CURH_ID FROM CURSO_HABILITADO WHERE CURSO_CUR_ID = @codigo AND CICLO = @ciclo AND SECCION = @seccion AND AÑO = @año)
		IF (SELECT ISNULL(@curh,-1)) = -1 
				BEGIN
					PRINT 'EL CURSO INGRESADO NO HA SIDO HABILITADO'
					RETURN
				END
		DECLARE @asignados AS NUMERIC = (SELECT COUNT(*) FROM ASIGNACION WHERE CURSO_HABILITADO_CURH_ID = @curh)
		DECLARE @desasignados AS NUMERIC = (SELECT COUNT(*) FROM ASIGNACION WHERE ESTADO = 0 AND CURSO_HABILITADO_CURH_ID = @curh)
		IF @asignados <= 0
			BEGIN
				PRINT 'NO HAY ALUMNOS ASIGNADOS AL CURSO'
				RETURN
			END
		DECLARE @porcentaje AS NUMERIC = CASE WHEN @desasignados > 0 THEN (@asignados*100)/@desasignados ELSE 0 END
		SELECT CURSO_CUR_ID AS CODIGO_CURSO, SECCION, CASE WHEN CICLO = '1S' THEN 'PRIMER SEMESTRE' WHEN CICLO = '2S' THEN 'SEGUNDO SEMESTRE' WHEN CICLO = 'VJ' THEN 'VACACIONES DE JUNIO' WHEN CICLO = 'VD' THEN 'VACACIONES DE DICIEMBRE' END AS CICLO, AÑO , @asignados AS LLEVARON_EL_CURSO, @desasignados AS DESASIGNARON_EL_CURSO, @porcentaje AS PORCENTAJE_DESASIGNACION FROM CURSO_HABILITADO
		WHERE CURSO_CUR_ID = @codigo AND CICLO = @ciclo AND SECCION = @seccion AND AÑO = @año 
	END
GO

--DROP PROCEDURE ConsultarDesasignacion
--EXEC ConsultarDesasignacion 665, '1S', 2022, 'A'


